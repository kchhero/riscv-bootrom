// See LICENSE for license details.

#ifndef _NEXELL_PLATFORM_H
#define _NEXELL_PLATFORM_H

#include "const.h"
#include "uart.h"

 // Some things missing from the official encoding.h
#if __riscv_xlen == 32
  #define MCAUSE_INT         0x80000000UL
  #define MCAUSE_CAUSE       0x7FFFFFFFUL
#else
   #define MCAUSE_INT         0x8000000000000000UL
   #define MCAUSE_CAUSE       0x7FFFFFFFFFFFFFFFUL
#endif

/****************************************************************************
 * Platform definitions
 *****************************************************************************/

// CPU info
#define NUM_CORES 1
#define GLOBAL_INT_SIZE 15
#define GLOBAL_INT_MAX_PRIORITY 7

// Memory map
#define AXI_PCIE_HOST_1_00_A_CTRL_ADDR _AC(0x50000000,UL)
#define AXI_PCIE_HOST_1_00_A_CTRL_SIZE _AC(0x4000000,UL)
#define CLINT_CTRL_ADDR _AC(0x2000000,UL)
#define CLINT_CTRL_SIZE _AC(0x10000,UL)
#define DEBUG_CTRL_ADDR _AC(0x0,UL)
#define DEBUG_CTRL_SIZE _AC(0x1000,UL)  //#define DEBUG_CTRL_SIZE _AC(0x1000,UL)
#define ERROR_MEM_ADDR _AC(0x3000,UL)
#define ERROR_MEM_SIZE _AC(0x1000,UL)
#define GPIO_CTRL_ADDR _AC(0x10012000,UL) //#define GPIO_CTRL_ADDR _AC(0x54002000,UL)
#define GPIO_CTRL_SIZE _AC(0x1000,UL)
#define MASKROM_MEM_ADDR _AC(0x10000,UL)
#define MASKROM_MEM_SIZE _AC(0x10000,UL)
#define MEMORY_MEM_ADDR _AC(0x80000000,UL)
#define MEMORY_MEM_SIZE _AC(0x10000000,UL)
#define SRAM_ADDR _AC(0xFFFF0000,UL)
#define SRAM_SIZE _AC(0x00010000,UL)
#define PLIC_CTRL_ADDR _AC(0xc000000,UL)
#define PLIC_CTRL_SIZE _AC(0x4000000,UL)
#define UART_CTRL_ADDR _AC(0x10013000,UL)  //#define UART_CTRL_ADDR _AC(0x54000000,UL)
#define UART_CTRL_SIZE _AC(0x1000,UL)

// IOF masks


// Interrupt numbers
#define UART_INT_BASE 1
#define SPI_INT_BASE 2
#define GPIO_INT_BASE 3
#define AXI_PCIE_HOST_1_00_A_INT_BASE 7

// Helper functions
#define _REG64(p, i) (*(volatile uint64_t *)((p) + (i)))
#define _REG32(p, i) (*(volatile uint32_t *)((p) + (i)))
#define _REG16(p, i) (*(volatile uint16_t *)((p) + (i)))
// Bulk set bits in `reg` to either 0 or 1.
// E.g. SET_BITS(MY_REG, 0x00000007, 0) would generate MY_REG &= ~0x7
// E.g. SET_BITS(MY_REG, 0x00000007, 1) would generate MY_REG |= 0x7
#define SET_BITS(reg, mask, value) if ((value) == 0) { (reg) &= ~(mask); } else { (reg) |= (mask); }
#define AXI_PCIE_HOST_1_00_A_REG(offset) _REG32(AXI_PCIE_HOST_1_00_A_CTRL_ADDR, offset)
#define CLINT_REG(offset) _REG32(CLINT_CTRL_ADDR, offset)
#define DEBUG_REG(offset) _REG32(DEBUG_CTRL_ADDR, offset)
#define ERROR_REG(offset) _REG32(ERROR_CTRL_ADDR, offset)
#define GPIO_REG(offset) _REG32(GPIO_CTRL_ADDR, offset)
#define MASKROM_REG(offset) _REG32(MASKROM_CTRL_ADDR, offset)
#define MEMORY_REG(offset) _REG32(MEMORY_CTRL_ADDR, offset)
#define PLIC_REG(offset) _REG32(PLIC_CTRL_ADDR, offset)
#define SPI_REG(offset) _REG32(SPI_CTRL_ADDR, offset)
#define UART_REG(offset) _REG32(UART_CTRL_ADDR, offset)
#define AXI_PCIE_HOST_1_00_A_REG64(offset) _REG64(AXI_PCIE_HOST_1_00_A_CTRL_ADDR, offset)
#define CLINT_REG64(offset) _REG64(CLINT_CTRL_ADDR, offset)
#define DEBUG_REG64(offset) _REG64(DEBUG_CTRL_ADDR, offset)
#define ERROR_REG64(offset) _REG64(ERROR_CTRL_ADDR, offset)
#define GPIO_REG64(offset) _REG64(GPIO_CTRL_ADDR, offset)
#define MASKROM_REG64(offset) _REG64(MASKROM_CTRL_ADDR, offset)
#define MEMORY_REG64(offset) _REG64(MEMORY_CTRL_ADDR, offset)
#define PLIC_REG64(offset) _REG64(PLIC_CTRL_ADDR, offset)
#define UART_REG64(offset) _REG64(UART_CTRL_ADDR, offset)


#if 1
#define PHY_BASEADDR_CMU_USB0_MODULE 0x24000000
#define PHY_BASEADDR_CMU_USB_MODULE 0x24000000

#define PHY_BASEADDR_SYSREG_USB0_MODULE_APB 0x24030000
#define PHY_BASEADDR_SYSREG_USB_MODULE_APB 0x24030000
#define PHY_BASEADDR_SYSREG_USB0_MODULE 0x24030000
#define PHY_BASEADDR_SYSREG_USB_MODULE 0x24030000
#define PHY_BASEADDR_SYSREG_USB0_MODULE_SECURE 0x24040000
#define PHY_BASEADDR_SYSREG_USB_MODULE_SECURE 0x24040000

#define PHY_BASEADDR_USB20HOST0_MODULE_EHCI_CFG 0x24080000
#define PHY_BASEADDR_USB20HOST_MODULE_EHCI_CFG 0x24080000
#define PHY_BASEADDR_USB20HOST0_MODULE_OHCI_CFG 0x24090000
#define PHY_BASEADDR_USB20HOST_MODULE_OHCI_CFG 0x24090000

#define PHY_BASEADDR_AXIM_BLK_USB_DATA_BUS0_MODULE 0x240B0000
#define PHY_BASEADDR_AXIM_BLK_USB_DATA_BUS_MODULE 0x240B0000
#define PHY_BASEADDR_USB20OTG0_MODULE_CFG 0x240C0000
#define PHY_BASEADDR_USB20OTG_MODULE_CFG 0x240C0000
#define PHY_BASEADDR_BLK_USB_DATA_BUS0_MODULE 0x24100000
#define PHY_BASEADDR_BLK_USB_DATA_BUS_MODULE 0x24100000

#define PHY_BASEADDR_SYSREG_DDR0_MODULE_APB 0x23030000
#define PHY_BASEADDR_SYSREG_DDR_MODULE_APB 0x23030000
#define PHY_BASEADDR_SYSREG_DDR0_MODULE 0x23030000
#define PHY_BASEADDR_SYSREG_DDR_MODULE 0x23030000
#define PHY_BASEADDR_SYSREG_DDR0_MODULE_SECURE 0x23040000
#define PHY_BASEADDR_SYSREG_DDR_MODULE_SECURE 0x23040000

#define PHY_BASEADDR_PLL_DDR0_MODULE 0x23070000
#define PHY_BASEADDR_PLL_DDR_MODULE 0x23070000
#define PHY_BASEADDR_PLL_DDR1_MODULE 0x23080000

#define PHY_BASEADDR_DDR0_MODULE 0x23090000
#define PHY_BASEADDR_DDR_MODULE 0x23090000

#define PHY_BASEADDR_UART0_MODULE 0x20400000
#define PHY_BASEADDR_UART_MODULE 0x20400000
#define PHY_BASEADDR_UART1_MODULE 0x20410000
#define PHY_BASEADDR_UART2_MODULE 0x20420000
#define PHY_BASEADDR_UART3_MODULE 0x20430000
#define PHY_BASEADDR_UART4_MODULE 0x20440000
#define PHY_BASEADDR_UART5_MODULE 0x20450000
#define PHY_BASEADDR_UART6_MODULE 0x20460000

#define PHY_BASEADDR_WDT0_MODULE 0x20800000
#define PHY_BASEADDR_WDT_MODULE 0x20800000
#define PHY_BASEADDR_PDM0_MODULE 0x20C00000
#define PHY_BASEADDR_PDM_MODULE 0x20C00000
#define PHY_BASEADDR_SYS_BUS0_MODULE_GPV 0x21000000
#define PHY_BASEADDR_SYS_BUS_MODULE_GPV 0x21000000
#define PHY_BASEADDR_SPI0_MODULE 0x30000000
#define PHY_BASEADDR_SPI_MODULE 0x30000000
#define PHY_BASEADDR_SYSREG_SYS0_MODULE_APB 0x20030000
#define PHY_BASEADDR_SYSREG_SYS_MODULE_APB 0x20030000
#define PHY_BASEADDR_SYSREG_SYS0_MODULE 0x20030000
#define PHY_BASEADDR_SYSREG_SYS_MODULE 0x20030000
#define PHY_BASEADDR_SYSREG_SYS0_MODULE_SECURE 0x20040000
#define PHY_BASEADDR_SYSREG_SYS_MODULE_SECURE 0x20040000
#define PHY_BASEADDR_SYSCTRLTOP0_MODULE_APB 0x20080000
#define PHY_BASEADDR_SYSCTRLTOP_MODULE_APB 0x20080000
#define PHY_BASEADDR_SYSCTRLTOP0_MODULE 0x20080000
#define PHY_BASEADDR_SYSCTRLTOP_MODULE 0x20080000
#define PHY_BASEADDR_SYSCTRLTOP0_MODULE_NONSECURE 0x20090000
#define PHY_BASEADDR_SYSCTRLTOP_MODULE_NONSECURE 0x20090000

#define PHY_BASEADDR_TIMER0_MODULE 0x208C0000
#define PHY_BASEADDR_TIMER_MODULE 0x208C0000

#define PHY_BASEADDR_DMA0_MODULE 0x20900000
#define PHY_BASEADDR_DMA_MODULE 0x20900000
#define PHY_BASEADDR_DMA1_MODULE 0x20910000

#define PHY_BASEADDR_I2C0_MODULE 0x20500000
#define PHY_BASEADDR_I2C_MODULE 0x20500000
#define PHY_BASEADDR_I2C1_MODULE 0x20510000
#define PHY_BASEADDR_I2C2_MODULE 0x20520000
#define PHY_BASEADDR_I2C3_MODULE 0x20530000
#define PHY_BASEADDR_I2C4_MODULE 0x20540000

#define PHY_BASEADDR_GPIO0_MODULE_APB 0x20180000
#define PHY_BASEADDR_GPIO_MODULE_APB 0x20180000
#define PHY_BASEADDR_GPIO0_MODULE 0x20180000
#define PHY_BASEADDR_GPIO_MODULE 0x20180000
#define PHY_BASEADDR_GPIO1_MODULE_APB 0x20190000
#define PHY_BASEADDR_GPIO1_MODULE 0x20190000
#define PHY_BASEADDR_GPIO2_MODULE_APB 0x201A0000
#define PHY_BASEADDR_GPIO2_MODULE 0x201A0000
#define PHY_BASEADDR_GPIO3_MODULE_APB 0x201B0000
#define PHY_BASEADDR_GPIO3_MODULE 0x201B0000
#define PHY_BASEADDR_GPIO4_MODULE_APB 0x201C0000
#define PHY_BASEADDR_GPIO4_MODULE 0x201C0000

#define PHY_BASEADDR_GPIO0_MODULE_SECURE 0x20200000
#define PHY_BASEADDR_GPIO_MODULE_SECURE 0x20200000
#define PHY_BASEADDR_GPIO1_MODULE_SECURE 0x20210000
#define PHY_BASEADDR_GPIO2_MODULE_SECURE 0x20220000
#define PHY_BASEADDR_GPIO3_MODULE_SECURE 0x20230000
#define PHY_BASEADDR_GPIO4_MODULE_SECURE 0x20240000

#define PHY_BASEADDR_ADC0_MODULE 0x20600000
#define PHY_BASEADDR_ADC_MODULE 0x20600000

#define PHY_BASEADDR_MDMA0_MODULE 0x20A00000
#define PHY_BASEADDR_MDMA_MODULE 0x20A00000

#define PHY_BASEADDR_DUMMY0_MODULE 0x20E00000
#define PHY_BASEADDR_DUMMY_MODULE 0x20E00000

#define PHY_BASEADDR_DMA_BUS0_MODULE 0x21200000
#define PHY_BASEADDR_DMA_BUS_MODULE 0x21200000

#define PHY_BASEADDR_ETC_BUS0_MODULE 0x21210000
#define PHY_BASEADDR_ETC_BUS_MODULE 0x21210000

#define PHY_BASEADDR_CFG_BUS0_MODULE 0x21220000
#define PHY_BASEADDR_CFG_BUS_MODULE 0x21220000

#define PHY_BASEADDR_AXIM_DMA0_MODULE 0x20320000
#define PHY_BASEADDR_AXIM_DMA_MODULE 0x20320000
#define PHY_BASEADDR_AXIM_DMA1_MODULE 0x20330000

#define PHY_BASEADDR_AXIM_SDMA0_MODULE 0x20340000
#define PHY_BASEADDR_AXIM_SDMA_MODULE 0x20340000
#define PHY_BASEADDR_AXIM_SDMA1_MODULE 0x20350000

#define PHY_BASEADDR_AXIM_CSSYS0_MODULE 0x20360000
#define PHY_BASEADDR_AXIM_CSSYS_MODULE 0x20360000

#define PHY_BASEADDR_MP2TSI0_MODULE 0x20B80000
#define PHY_BASEADDR_MP2TSI_MODULE 0x20B80000

#define PHY_BASEADDR_I2S0_MODULE 0x20780000
#define PHY_BASEADDR_I2S_MODULE 0x20780000
#define PHY_BASEADDR_I2S1_MODULE 0x20790000
#define PHY_BASEADDR_I2S2_MODULE 0x207A0000
#define PHY_BASEADDR_I2S3_MODULE 0x207B0000

#define PHY_BASEADDR_MP2TSI1_MODULE 0x20B90000
#define PHY_BASEADDR_AXIM_MP2TSI0_MODULE 0x203A0000
#define PHY_BASEADDR_AXIM_MP2TSI_MODULE 0x203A0000
#define PHY_BASEADDR_AXIM_MP2TSI1_MODULE 0x203B0000

#define PHY_BASEADDR_AXIM_PDM0_MODULE 0x203C0000
#define PHY_BASEADDR_AXIM_PDM_MODULE 0x203C0000

#define PHY_BASEADDR_AXIM_MDMA0_MODULE 0x203D0000
#define PHY_BASEADDR_AXIM_MDMA_MODULE 0x203D0000

#define PHY_BASEADDR_CMU_SRC0_MODULE 0x27000000
#define PHY_BASEADDR_CMU_SRC_MODULE 0x27000000

#define PHY_BASEADDR_CMU_SYS0_MODULE 0x27010000
#define PHY_BASEADDR_CMU_SYS_MODULE 0x27010000

#define PHY_BASEADDR_PLL0_MODULE 0x27020000
#define PHY_BASEADDR_PLL_MODULE 0x27020000
#define PHY_BASEADDR_PLL1_MODULE 0x27030000

#define PHY_BASEADDR_SDMMC0_MODULE 0x26080000
#define PHY_BASEADDR_SDMMC_MODULE 0x26080000
#define PHY_BASEADDR_SDMMC1_MODULE 0x26090000
#define PHY_BASEADDR_SDMMC2_MODULE 0x260A0000

#define PHY_BASEADDR_AXIM_SDMMC0_MODULE 0x26190000
#define PHY_BASEADDR_AXIM_SDMMC_MODULE 0x26190000
#define PHY_BASEADDR_AXIM_SDMMC1_MODULE 0x261A0000
#define PHY_BASEADDR_AXIM_SDMMC2_MODULE 0x261B0000

#define PHY_BASEADDR_BLK_HSIF_DATA_BUS0_MODULE 0x26200000
#define PHY_BASEADDR_BLK_HSIF_DATA_BUS_MODULE 0x26200000

#define PHY_BASEADDR_CMU_CPU0_MODULE 0x22000000
#define PHY_BASEADDR_CMU_CPU_MODULE 0x22000000

#define PHY_BASEADDR_SYSREG_CPU0_MODULE_APB 0x22030000
#define PHY_BASEADDR_SYSREG_CPU_MODULE_APB 0x22030000
#define PHY_BASEADDR_SYSREG_CPU0_MODULE 0x22030000
#define PHY_BASEADDR_SYSREG_CPU_MODULE 0x22030000
#define PHY_BASEADDR_SYSREG_CPU0_MODULE_SECURE 0x22040000
#define PHY_BASEADDR_SYSREG_CPU_MODULE_SECURE 0x22040000

#define PHY_BASEADDR_PLL_CPU0_MODULE 0x22070000
#define PHY_BASEADDR_PLL_CPU_MODULE 0x22070000

#define PHY_BASEADDR_AXIM_CPU0_MODULE 0x22080000
#define PHY_BASEADDR_AXIM_CPU_MODULE 0x22080000

#define PHY_BASEADDR_CPU_REGBASE0_MODULE 0x220C0000
#define PHY_BASEADDR_CPU_REGBASE_MODULE 0x220C0000

#define PHY_BASEADDR_CMU_MM0_MODULE 0x25000000
#define PHY_BASEADDR_CMU_MM_MODULE 0x25000000

#define PHY_BASEADDR_G2D0_MODULE 0x25090000
#define PHY_BASEADDR_G2D_MODULE 0x25090000

#define PHY_BASEADDR_DEINTERLACE0_MODULE 0x250C0000
#define PHY_BASEADDR_DEINTERLACE_MODULE 0x250C0000

#define PHY_BASEADDR_DPC0_MODULE 0x25140000
#define PHY_BASEADDR_DPC_MODULE 0x25140000

#define PHY_BASEADDR_AXIM_DEINTERLACE0_MODULE 0x251D0000
#define PHY_BASEADDR_AXIM_DEINTERLACE_MODULE 0x251D0000

#define PHY_BASEADDR_AXIM_G2D0_MODULE 0x251E0000
#define PHY_BASEADDR_AXIM_G2D_MODULE 0x251E0000

#define PHY_BASEADDR_BLK_MM_DATA_BUS0_MODULE_GPV 0x25200000
#define PHY_BASEADDR_BLK_MM_DATA_BUS_MODULE_GPV 0x25200000

#define PHY_BASEADDR_BLK_MM_DATA_BUS0_MODULE_PL301 0x25300000
#define PHY_BASEADDR_BLK_MM_DATA_BUS_MODULE_PL301 0x25300000

#define PHY_BASEADDR_G2D0_MODULE_CPU_FIFO 0x25380000
#define PHY_BASEADDR_G2D_MODULE_CPU_FIFO 0x25380000


#define NUMBER_OF_CMU_USB_MODULE 1 
#define NUMBER_OF_SYSREG_USB_MODULE 1 
#define NUMBER_OF_USB20HOST_MODULE 1 
#define NUMBER_OF_AXIM_BLK_USB_DATA_BUS_MODULE 1 
#define NUMBER_OF_USB20OTG_MODULE 1 
#define NUMBER_OF_BLK_USB_DATA_BUS_MODULE 1 
#define NUMBER_OF_PLL_DDR_MODULE 2 
#define NUMBER_OF_UART_MODULE 7 
#define NUMBER_OF_SYS_BUS_MODULE 1 
#define NUMBER_OF_SYSREG_SYS_MODULE 1 
#define NUMBER_OF_SYSCTRLTOP_MODULE 1 
#define NUMBER_OF_TIMER_MODULE 1 
#define NUMBER_OF_I2C_MODULE 5 
#define NUMBER_OF_DMA_MODULE 2 
#define NUMBER_OF_GPIO_MODULE 5 
#define NUMBER_OF_SDMA_MODULE 2 
#define NUMBER_OF_ADC_MODULE 1 
#define NUMBER_OF_MDMA_MODULE 1 
#define NUMBER_OF_DUMMY_MODULE 1 
#define NUMBER_OF_DMA_BUS_MODULE 1 
#define NUMBER_OF_ETC_BUS_MODULE 1 
#define NUMBER_OF_CFG_BUS_MODULE 1 
#define NUMBER_OF_AXIM_DMA_MODULE 2 
#define NUMBER_OF_AXIM_SDMA_MODULE 2 
#define NUMBER_OF_AXIM_CSSYS_MODULE 1 
#define NUMBER_OF_I2S_MODULE 4 
#define NUMBER_OF_MP2TSI_MODULE 2 
#define NUMBER_OF_AXIM_PDM_MODULE 1 
#define NUMBER_OF_AXIM_MDMA_MODULE 1 
#define NUMBER_OF_CMU_SRC_MODULE 1 
#define NUMBER_OF_CMU_SYS_MODULE 1 
#define NUMBER_OF_PLL_MODULE 2 
#define NUMBER_OF_SYSREG_HSIF_MODULE 1 
#define NUMBER_OF_SDMMC_MODULE 3 
#define NUMBER_OF_AXIM_SDMMC_MODULE 3 
#define NUMBER_OF_BLK_HSIF_DATA_BUS_MODULE 1 
#define NUMBER_OF_CMU_CPU_MODULE 1 
#define NUMBER_OF_CPUPMU_MODULE 1 
#define NUMBER_OF_SYSREG_CPU_MODULE 1 
#define NUMBER_OF_PLL_CPU_MODULE 1 
#define NUMBER_OF_AXIM_CPU_MODULE 1 
#define NUMBER_OF_CPU_REGBASE_MODULE 1 
#define NUMBER_OF_CMU_MM_MODULE 1 
#define NUMBER_OF_SYSREG_MM_MODULE 1 
#define NUMBER_OF_ROTATOR_MODULE 1 
#define NUMBER_OF_G2D_MODULE 1 
#define NUMBER_OF_DEINTERLACE_MODULE 1 
#define NUMBER_OF_DPC_MODULE 1 
#define NUMBER_OF_AXIM_CODA960_MODULE 1 
#define NUMBER_OF_AXIM_DPC_MODULE 1 
#define NUMBER_OF_AXIM_DEINTERLACE_MODULE 1 
#define NUMBER_OF_AXIM_G2D_MODULE 1 
#define NUMBER_OF_BLK_MM_DATA_BUS_MODULE 1 
#endif

#ifdef DEBUG
	#define NX_ASSERT(expr)																\
	{																					\
		if (!(expr))																	\
		{																				\
			NX_TRACE((TEXT("%s(%d) : %s %s (%s)\n"),									\
				TEXT(__FILE__), __LINE__, __FUNCTION__, TEXT("ASSERT"), TEXT(#expr)));	\
			NX_DEBUG_BREAK();															\
		}																				\
	}
#else
	#define NX_ASSERT(expr)
#endif // NX_DEBUG

#endif /* _NEXELL_PLATFORM_H */
